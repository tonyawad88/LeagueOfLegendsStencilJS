/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/router';
import 'ionicons';
import '@ionic/core';

import {
  RouterHistory,
} from '@stencil/router';
import {
  Champion,
} from './services/heroes';
import {
  EventEmitter,
} from '@stencil/core';

declare global {
  interface HTMLAppHomeElement extends HTMLStencilElement {
    'history': RouterHistory;
  }
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-home': JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
    }
  }
}


declare global {
  interface HTMLAppProfileElement extends HTMLStencilElement {
    'history': RouterHistory;
  }
  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };
  interface HTMLElementTagNameMap {
    'app-profile': HTMLAppProfileElement;
  }
  interface ElementTagNameMap {
    'app-profile': HTMLAppProfileElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-profile': JSXElements.AppProfileAttributes;
    }
  }
  namespace JSXElements {
    export interface AppProfileAttributes extends HTMLAttributes {
      'history'?: RouterHistory;
    }
  }
}


declare global {
  interface HTMLBackgroundCoverElement extends HTMLStencilElement {
    'backgroundUrl': string;
  }
  var HTMLBackgroundCoverElement: {
    prototype: HTMLBackgroundCoverElement;
    new (): HTMLBackgroundCoverElement;
  };
  interface HTMLElementTagNameMap {
    'background-cover': HTMLBackgroundCoverElement;
  }
  interface ElementTagNameMap {
    'background-cover': HTMLBackgroundCoverElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'background-cover': JSXElements.BackgroundCoverAttributes;
    }
  }
  namespace JSXElements {
    export interface BackgroundCoverAttributes extends HTMLAttributes {
      'backgroundUrl'?: string;
    }
  }
}


declare global {
  interface HTMLChampionListElement extends HTMLStencilElement {
    'heroes': Array<Champion>;
    'history': RouterHistory;
  }
  var HTMLChampionListElement: {
    prototype: HTMLChampionListElement;
    new (): HTMLChampionListElement;
  };
  interface HTMLElementTagNameMap {
    'champion-list': HTMLChampionListElement;
  }
  interface ElementTagNameMap {
    'champion-list': HTMLChampionListElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'champion-list': JSXElements.ChampionListAttributes;
    }
  }
  namespace JSXElements {
    export interface ChampionListAttributes extends HTMLAttributes {
      'heroes'?: Array<Champion>;
      'history'?: RouterHistory;
    }
  }
}


declare global {
  interface HTMLHeroAbilitySummaryElement extends HTMLStencilElement {
    'first': string;
    'last': string;
  }
  var HTMLHeroAbilitySummaryElement: {
    prototype: HTMLHeroAbilitySummaryElement;
    new (): HTMLHeroAbilitySummaryElement;
  };
  interface HTMLElementTagNameMap {
    'hero-ability-summary': HTMLHeroAbilitySummaryElement;
  }
  interface ElementTagNameMap {
    'hero-ability-summary': HTMLHeroAbilitySummaryElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'hero-ability-summary': JSXElements.HeroAbilitySummaryAttributes;
    }
  }
  namespace JSXElements {
    export interface HeroAbilitySummaryAttributes extends HTMLAttributes {
      'first'?: string;
      'last'?: string;
    }
  }
}


declare global {
  interface HTMLHeroDmgStatsElement extends HTMLStencilElement {
    'backgroundUrl': string;
    'hero': Champion;
  }
  var HTMLHeroDmgStatsElement: {
    prototype: HTMLHeroDmgStatsElement;
    new (): HTMLHeroDmgStatsElement;
  };
  interface HTMLElementTagNameMap {
    'hero-dmg-stats': HTMLHeroDmgStatsElement;
  }
  interface ElementTagNameMap {
    'hero-dmg-stats': HTMLHeroDmgStatsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'hero-dmg-stats': JSXElements.HeroDmgStatsAttributes;
    }
  }
  namespace JSXElements {
    export interface HeroDmgStatsAttributes extends HTMLAttributes {
      'backgroundUrl'?: string;
      'hero'?: Champion;
    }
  }
}


declare global {
  interface HTMLHeroSkinsElement extends HTMLStencilElement {
    'first': string;
    'last': string;
  }
  var HTMLHeroSkinsElement: {
    prototype: HTMLHeroSkinsElement;
    new (): HTMLHeroSkinsElement;
  };
  interface HTMLElementTagNameMap {
    'hero-skins': HTMLHeroSkinsElement;
  }
  interface ElementTagNameMap {
    'hero-skins': HTMLHeroSkinsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'hero-skins': JSXElements.HeroSkinsAttributes;
    }
  }
  namespace JSXElements {
    export interface HeroSkinsAttributes extends HTMLAttributes {
      'first'?: string;
      'last'?: string;
    }
  }
}


declare global {
  interface HTMLLazyImgElement extends HTMLStencilElement {
    'alt': string;
    'src': string;
  }
  var HTMLLazyImgElement: {
    prototype: HTMLLazyImgElement;
    new (): HTMLLazyImgElement;
  };
  interface HTMLElementTagNameMap {
    'lazy-img': HTMLLazyImgElement;
  }
  interface ElementTagNameMap {
    'lazy-img': HTMLLazyImgElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'lazy-img': JSXElements.LazyImgAttributes;
    }
  }
  namespace JSXElements {
    export interface LazyImgAttributes extends HTMLAttributes {
      'alt'?: string;
      'onLazyImgloaded'?: (event: CustomEvent<HTMLImageElement>) => void;
      'src'?: string;
    }
  }
}


declare global {
  interface HTMLMyAppElement extends HTMLStencilElement {

  }
  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-app': JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
